/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/appscreen_screen/AppScreenViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>

AppScreenViewBase::AppScreenViewBase() :
    buttonCallback(this, &AppScreenViewBase::buttonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    BG_Image.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_1024X600_SHATTERED_RAIN_LIGHT_ID));
    BG_Image.setPosition(0, 0, 480, 272);
    BG_Image.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(BG_Image);

    toggleButton1.setXY(298, 106);
    toggleButton1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_LARGE_ROUND_TEXT_OFF_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_LARGE_ROUND_TEXT_ON_ACTIVE_ID));
    toggleButton1.setAction(buttonCallback);
    add(toggleButton1);

    gauge1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_MEDIUM_BACKGROUNDS_DARK_FILLED_ID));
    gauge1.setPosition(13, 16, 240, 240);
    gauge1.setCenter(120, 120);
    gauge1.setStartEndAngle(-113, 112);
    gauge1.setRange(0, 100);
    gauge1.setValue(0);
    gauge1.setEasingEquation(touchgfx::EasingEquations::linearEaseIn);
    gauge1.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_MEDIUM_NEEDLES_ROUGH_ID, 7, 67);
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    gauge1.setArcVisible();
    gauge1Painter.setColor(touchgfx::Color::getColorFromRGB(217, 33, 33));
    gauge1.getArc().setPainter(gauge1Painter);
    gauge1.getArc().setRadius(0);
    gauge1.getArc().setLineWidth(0);
    gauge1.putArcOnTop();
    add(gauge1);
}

AppScreenViewBase::~AppScreenViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void AppScreenViewBase::setupScreen()
{

}

void AppScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &toggleButton1)
    {
        //Interaction1
        //When toggleButton1 clicked call virtual function
        //Call ButtonCallsThisFunc
        ButtonCallsThisFunc();
    }
}
